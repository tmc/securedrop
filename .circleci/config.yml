version: 2
jobs:
  build:
    docker:
      - image: gcr.io/cloud-builders/docker
    working_directory: /build
    environment:
      DOCKER_API_VERSION=1.23
    parallelism: 4
    steps:
      - run: apt-get install -y make
      - checkout
      - setup_remote_docker

      - restore_cache:
          keys:
            - v1-sd-layers-{{ .Branch }}-
          paths:
            - /caches/layers.tar

      - run:
          name: Load image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/layers.tar |true

      - run:
          name: Build Docker images
          command: |
            set +o pipefail
            docker images
            fromtag=$(docker images |grep securedrop-test |head -n1 |awk '{print $2}')
            cd securedrop && EXTRA_BUILD_ARGS="--cache-from securedrop-test:${fromtag}" make images TAG=${CIRCLE_SHA1}

      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker images
            docker save -o /caches/layers.tar securedrop-test:${CIRCLE_SHA1}

      - save_cache:
          key: v1-sd-layers-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/layers.tar

      - run: mkdir -p ~/test-results

      - run: |
          set +o pipefail
          export TESTFILES=$(cd securedrop; circleci tests glob 'tests/test*py' 'tests/**/test*py' |circleci tests split --split-by=timings |xargs echo)
          docker rm -f securedrop-test |true
          ci_env=`bash <(curl -s https://codecov.io/env)`
          cd securedrop && EXTRA_TEST_ARGS="${ci_env} --name securedrop-test" make test TAG=${CIRCLE_SHA1}

      - run:
          name: Report results
          command: |
            docker cp securedrop-test:/tmp/test-results ~/
          when: always

      - store_test_results:
          path: ~/test-results

      - store_artifacts:
          path: ~/test-results

  testinfra:
    docker:
      - image: gcr.io/cloud-builders/docker
    working_directory: /build
    environment:
      DOCKER_API_VERSION=1.23
    steps:
      - run: apt-get install -y make
      - checkout
      - setup_remote_docker
      - run: cd testinfra && make images TAG=${CIRCLE_SHA1}
